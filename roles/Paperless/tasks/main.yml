---
# This role sets up Paperless-ngx withing a podman container
- name: Paperless-ngx | assert variables are set
  ansible.builtin.assert:
    that:
      - paperless_timezone is defined
      - paperless_ocr_language is defined
      - paperless_secret_key is defined
      - paperless_sftpgo_password is defined
      - paperless_sftpgo_admin_password is defined
      - paperless_postgresql_password is defined
      - paperless_domain is defined
      - paperless_port is defined
      - paperless_certbot_email is defined

- name: Paperless-ngx | Make sure podman, jq, nginx, certbot, and python3-certbot-nginx are installed
  ansible.builtin.package:
    name:
      - podman
      - jq
      - nginx
      - certbot
      - python3-certbot-nginx
    state: present

- name: Paperless-ngx | create paperless user
  ansible.builtin.user:
    name: paperless
    shell: /bin/bash
    system: yes
    createhome: yes
    uid: 2000

- name: Paperless-ngx | Create /opt/ppngx directory
  ansible.builtin.file:
    path: /opt/ppngx
    state: directory
    owner: paperless
    group: paperless
    mode: '0755'

- name: Paperless-ngx | create paperless group
  ansible.builtin.group:
    name: paperless
    system: yes

- name: Paperless-ngx | create paperless directory
  ansible.builtin.file:
    path: /opt/ppngx
    state: directory
    owner: paperless
    group: paperless
    mode: '0755'

- name: Paperless-ngx | check if paperless repo exists
  ansible.builtin.stat:
    path: /opt/ppngx/.git
  register: paperless_repo

- name: Paperless-ngx | clone ppngx repo
  ansible.builtin.git:
    repo: https://github.com/jdoss/ppngx.git
    dest: /opt/ppngx
  when: paperless_repo.stat.exists == False

- name: Paperless-ngx | chown ppngx directory
  ansible.builtin.file:
    path: /opt/ppngx
    state: directory
    owner: paperless
    group: paperless
    mode: '0750'

- name: Paperless-ngx | edit ppngx config - timezone
  ansible.builtin.replace:
    path: /opt/ppngx/start.sh
    regexp: 'PAPERLESS_TIME_ZONE=America/Chicago'
    replace: 'PAPERLESS_TIME_ZONE={{ paperless_timezone }}'

- name: Paperless-ngx | edit ppngx config - ocr language
  ansible.builtin.replace:
    path: /opt/ppngx/start.sh
    regexp: 'PAPERLESS_OCR_LANG=eng'
    replace: 'PAPERLESS_OCR_LANG={{ paperless_ocr_language }}'
  
- name: Paperless-ngx | edit ppngx config - secret key
  ansible.builtin.replace:
    path: /opt/ppngx/start.sh
    regexp: 'PAPERLESS_SECRET_KEY=chamgemechamgemechamgemechamgemechamgemechamgemechamgemechamgeme'
    replace: 'PAPERLESS_SECRET_KEY={{ paperless_secret_key }}'
  
- name: Paperless-ngx | edit ppngx config - sftpgo password
  ansible.builtin.replace:
    path: /opt/ppngx/start.sh
    regexp: 'SFTPGO_PAPERLESS_PASSWORD=anothersupersecret'
    replace: 'SFTPGO_PAPERLESS_PASSWORD={{ paperless_sftpgo_password }}'
  
- name: Paperless-ngx | edit ppngx config - sftpgo admin password
  ansible.builtin.replace:
    path: /opt/ppngx/start.sh
    regexp: 'SFTPGO_ADMIN_PASSWORD=supersecret'
    replace: 'SFTPGO_ADMIN_PASSWORD={{ paperless_sftpgo_admin_password }}'

- name: Paperless-ngx | edit ppngx config - postgresql password
  ansible.builtin.replace:
    path: /opt/ppngx/start.sh
    regexp: 'POSTGRESQL_PASSWORD=paperlesschangeme'
    replace: 'POSTGRESQL_PASSWORD={{ paperless_postgresql_password }}'

- name: Paperless-ngx | edit ppngx config - paperless consume queue
  ansible.builtin.replace:
    path: /opt/ppngx/start.sh
    regexp: '  -v paperless-consume:/usr/src/paperless/consume:U,z \\'
    replace: '  -v /mnt/cryptdrive/documents:/usr/src/paperless/consume \\'


- name: Paperless-ngx | certbot nginx
  ansible.builtin.command: certbot certonly --standalone -d "{{ paperless_domain }}" --non-interactive --agree-tos --email "{{ paperless_certbot_email }}"

- name: Paperless-ngx | copy nginx config
  template:
    src: paperless.conf.j2
    dest: /etc/nginx/conf.d/paperless.conf
    owner: paperless
    group: paperless
    mode: '0644'

- name: Paperless-ngx | test nginx config
  ansible.builtin.command: nginx -t
  register: nginx_test
  failed_when: nginx_test.rc != 0

- fail:
    msg: "nginx config test failed"
  when: nginx_test.rc != 0

- name: Paperless-ngx | restart nginx
  ansible.builtin.service:
    name: nginx
    state: restarted

- name: Paperless-ngx | start ppngx
  ansible.builtin.command: 
    cmd: /opt/ppngx/start.sh
    chdir: /opt/ppngx
  async: 60
  poll: 0
  register: ppngx_start

- name: Paperless-ngx | wait for ppngx to start
  ansible.builtin.wait_for:
    port: "{{ paperless_port }}"
    host: localhost
    delay: 5
    timeout: 200
  when: ppngx_start is changed

- name: Paperless-ngx | check if paperless is running
  ansible.builtin.uri:
    url: "http://localhost:{{ paperless_port }}"
    return_content: yes
  register: paperless_running
  until: paperless_running.status == 200
  retries: 10
  delay: 5
  when: ppngx_start is changed

- fail:
    msg: "Paperless is not running"
  when: paperless_running.status != 200